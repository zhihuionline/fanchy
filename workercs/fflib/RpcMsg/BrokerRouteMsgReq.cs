/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;

namespace ff
{

  #if !SILVERLIGHT
  [Serializable]
  #endif
  public partial class BrokerRouteMsgReq : TBase
  {
    private string _dest_service_name;
    private string _dest_msg_name;
    private long _dest_node_id;
    private long _from_node_id;
    private long _callback_id;
    private string _body;
    private string _err_info;

    public string Dest_service_name
    {
      get
      {
        return _dest_service_name;
      }
      set
      {
        __isset.dest_service_name = true;
        this._dest_service_name = value;
      }
    }

    public string Dest_msg_name
    {
      get
      {
        return _dest_msg_name;
      }
      set
      {
        __isset.dest_msg_name = true;
        this._dest_msg_name = value;
      }
    }

    public long Dest_node_id
    {
      get
      {
        return _dest_node_id;
      }
      set
      {
        __isset.dest_node_id = true;
        this._dest_node_id = value;
      }
    }

    public long From_node_id
    {
      get
      {
        return _from_node_id;
      }
      set
      {
        __isset.from_node_id = true;
        this._from_node_id = value;
      }
    }

    public long Callback_id
    {
      get
      {
        return _callback_id;
      }
      set
      {
        __isset.callback_id = true;
        this._callback_id = value;
      }
    }

    public string Body
    {
      get
      {
        return _body;
      }
      set
      {
        __isset.body = true;
        this._body = value;
      }
    }

    public string Err_info
    {
      get
      {
        return _err_info;
      }
      set
      {
        __isset.err_info = true;
        this._err_info = value;
      }
    }


    public Isset __isset;
    #if !SILVERLIGHT
    [Serializable]
    #endif
    public struct Isset {
      public bool dest_service_name;
      public bool dest_msg_name;
      public bool dest_node_id;
      public bool from_node_id;
      public bool callback_id;
      public bool body;
      public bool err_info;
    }

    public BrokerRouteMsgReq() {
    }

    public void Read (TProtocol iprot)
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 2:
            if (field.Type == TType.String) {
              Dest_service_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Dest_msg_name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I64) {
              Dest_node_id = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I64) {
              From_node_id = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.I64) {
              Callback_id = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.String) {
              Body = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.String) {
              Err_info = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }

    public void Write(TProtocol oprot) {
      TStruct struc = new TStruct("BrokerRouteMsgReq");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (Dest_service_name != null && __isset.dest_service_name) {
        field.Name = "dest_service_name";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Dest_service_name);
        oprot.WriteFieldEnd();
      }
      if (Dest_msg_name != null && __isset.dest_msg_name) {
        field.Name = "dest_msg_name";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Dest_msg_name);
        oprot.WriteFieldEnd();
      }
      if (__isset.dest_node_id) {
        field.Name = "dest_node_id";
        field.Type = TType.I64;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Dest_node_id);
        oprot.WriteFieldEnd();
      }
      if (__isset.from_node_id) {
        field.Name = "from_node_id";
        field.Type = TType.I64;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(From_node_id);
        oprot.WriteFieldEnd();
      }
      if (__isset.callback_id) {
        field.Name = "callback_id";
        field.Type = TType.I64;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Callback_id);
        oprot.WriteFieldEnd();
      }
      if (Body != null && __isset.body) {
        field.Name = "body";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Body);
        oprot.WriteFieldEnd();
      }
      if (Err_info != null && __isset.err_info) {
        field.Name = "err_info";
        field.Type = TType.String;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Err_info);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }

    public override string ToString() {
      StringBuilder sb = new StringBuilder("BrokerRouteMsgReq(");
      sb.Append("Dest_service_name: ");
      sb.Append(Dest_service_name);
      sb.Append(",Dest_msg_name: ");
      sb.Append(Dest_msg_name);
      sb.Append(",Dest_node_id: ");
      sb.Append(Dest_node_id);
      sb.Append(",From_node_id: ");
      sb.Append(From_node_id);
      sb.Append(",Callback_id: ");
      sb.Append(Callback_id);
      sb.Append(",Body: ");
      sb.Append(Body);
      sb.Append(",Err_info: ");
      sb.Append(Err_info);
      sb.Append(")");
      return sb.ToString();
    }

  }

}
